input {
   file {
    path => "/home/elastic/csv/Terrena_VM*.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
 }
}
filter{
        csv{
        skip_empty_rows => "true"
        skip_header => "true"
        separator => ","
        columns => ["Client","Backup_LastDate", "Job_Size(GB)","Backup_Date"]
        }
        mutate { gsub => [ "Backup_Date", "[*^;]" , ""]}
        #mutate { gsub => [ "message", ";", "," ] }
        if ![Backup_Date] or [Backup_Date] == "Last Backup Time" or [Backup_Date] == "Backup" or [Backup_Date] == "Job Type" or [Backup_Date] == "Purchased" or [Bac
kup_Date] == "0" or [Backup_Date] == "0.000"
        {  drop{} }
        if ![Client] or [Client] == "Job ID" or [Client]== "Agent" or [Client]== "Notes:" or [Client] == "This table only includes clients that have valid jobs."or [Client] == ""or [Client] == "Front End Capacity Usage Details(Purchased Capacity) * "{drop{}}
        if [message] =~ /^,+$/ or [column5]=="0.00" {drop { }}
        if [column11] =="No"  {drop { }}
        if ![message] or ![Job_Size(GB)] or [Job_Size(GB)] =="0GB" or [Job_Size(GB)] == 0
        {drop{ } }
        mutate {remove_field => ["path","host","message","column4","column5"]}
        mutate {convert => ["Job_Size(GB)","integer"]}
        date {
                match => ["Backup_Date","yyyy-MM-dd"]
                timezone => "UCT"
                target => "@timestamp"
                }
}
output{
   elasticsearch{
                hosts => "https://xxx.Xxx.xxx.xxx:9200"
                index => "index_name"
                document_type => "backup_vm"
                user => "elastic"
                password => "xxx"
                ssl => true
                cacert => "/etc/elasticsearch/elasticsearch-ca.pem"
                #include_type_name => true
        }
        stdout{codec => rubydebug}
}
                
